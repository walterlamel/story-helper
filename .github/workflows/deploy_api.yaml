name: Deploy API
run-name: ${{ github.actor }} lance le deploiement de l'API
on:
       push:
              branches:
                     - master

env:
       NODE_VERSION: "16.17.1"
       NAME_ARTIFICAT: "story-helper"
       REMOTE_TARGET: /home/debianftp/www/api-story-helper
       PATH_API: ./api-story-idea
       PATH_APP: ./story-helper
       #PORT: ${{ secrets.PORT_API }}
       #HOST: 0.0.0.0
       #APP_KEY: ${{ secrets.APP_KEY }}
       DRIVE_DISK: local
       DB_CONNECTION: mysql
       MYSQL_HOST: localhost
       MYSQL_PORT: ${{ secrets.MYSQL_PORT }}
       MYSQL_USER: ${{ secrets.MYSQL_USER }}
       MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
       MYSQL_DB_NAME: storyhelper

jobs:
       BUILD:
              runs-on: ubuntu-latest
              defaults:
                     run:
                            working-directory: ${{ env.PATH_API }}
              steps:
                     - uses: actions/checkout@master

                     - name: Check node
                       uses: actions/setup-node@master
                       with:
                              node-version: ${{ env.NODE_VERSION }}
                              cache: "npm"
                              cache-dependency-path: ${{ env.PATH_API }}/package-lock.json

                     - run: npm install

                     - name: Build
                       run: node ace build --production
                       working-directory: ${{ env.PATH_API }}

                     #- name: get env
                     #  run: cp .env.production ./build/.env

                     - name: Artifact
                       uses: actions/upload-artifact@v1
                       with:
                              name: ${{ env.NAME_ARTIFICAT }}
                              path: ${{ env.PATH_API }}/build

       DEPLOY:
              runs-on: ubuntu-latest
              needs: BUILD
              steps:
                     - uses: actions/checkout@master

                     - name: Check node
                       uses: actions/setup-node@master
                       with:
                              node-version: ${{ env.NODE_VERSION }}
                              cache: "npm"
                              cache-dependency-path: ${{ env.PATH_API }}/package-lock.json

                     - name: download artifact
                       uses: actions/download-artifact@v1
                       with:
                              name: ${{ env.NAME_ARTIFICAT }}
                              path: ./build

                     - name: Deploy to Staging server
                       uses: easingthemes/ssh-deploy@v2
                       env:
                              SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
                              ARGS: "-rltgoDzvO --delete"
                              SOURCE: build/
                              REMOTE_HOST: ${{ secrets.SSH_HOST }}
                              REMOTE_USER: ${{ secrets.SSH_USER }}
                              REMOTE_PORT: ${{ secrets.SSH_PORT }}
                              TARGET: ${{ env.REMOTE_TARGET }}

       SSH:
              runs-on: ubuntu-latest
              needs: DEPLOY
              steps:
                     - uses: actions/checkout@master

                     - name: checkout
                       uses: actions/setup-node@master
                       with:
                              node-version: ${{ env.NODE_VERSION }}

                     - name: Deploy
                       uses: appleboy/ssh-action@master
                       #env:
                       #       PORT_INSIDE: ${{ secrets.PORT_API }}
                       #       HOST_INSIDE: 0.0.0.0
                       #       APP_KEY: ${{ secrets.APP_KEY }}
                       #       NODE_ENV: production
                       with:
                              host: ${{ secrets.SSH_HOST }}
                              username: ${{ secrets.SSH_USER }}
                              port: ${{ secrets.SSH_PORT }}
                              key: ${{ secrets.SSH_PRIVATE_KEY }}
                              script_stop: true
                              all_envs: true
                              script: |
                                     pm2 stop api-story-helper
                                     cd /home/debianftp/www/api-story-helper
                                     npm ci --production
                                     echo PORT=${{ secrets.PORT_API }} > .env
                                     echo HOST=0.0.0.0 >> .env
                                     echo NODE_ENV=development >> .env
                                     echo APP_KEY=7ZXfGelNI84bhINEYhyj7FRkhRJ0iCh9 >> .env
                                     echo DRIVE_DISK=local >> .env
                                     echo DB_CONNECTION=mysql >> .env
                                     echo MYSQL_HOST=${{ env.MYSQL_HOST }} >> .env
                                     echo MYSQL_PORT=${{ env.MYSQL_PORT }} >> .env
                                     echo MYSQL_USER=${{ env.MYSQL_USER }} >> .env
                                     echo MYSQL_PASSWORD=${{ env.MYSQL_PASSWORD }} >> .env
                                     echo MYSQL_DB_NAME=${{ env.MYSQL_DB_NAME }} >> .env
                                     pm2 start server.js --name api-story-helper
                                     pm2 save
