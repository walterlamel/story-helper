name: Deploy on Serve
run-name: ${{ github.actor }} lance le deploiement
on:
       push:
              branches:
                     - master

env:
       NODE_VERSION: "16.17.1"
       NAME_ARTIFICAT: "story-helper"
       NAME_ARTIFACT_REACT: "story-helper-react"
       REMOTE_TARGET: /home/debianftp/www/api-story-helper
       PATH_API: ./api-story-idea
       PATH_REACT: ./story-helper
       PATH_APP: ./story-helper

jobs:
       BUILDREACT:
              runs-on: ubuntu-latest
              defaults:
                     run:
                            working-directory: ${{ env.PATH_REACT }}
              steps:
                     - uses: actions/checkout@master

                     - uses: actions/setup-node@master
                       with:
                              node-version: ${{ env.NODE_VERSION }}
                              cache: "npm"
                              cache-dependency-path: ${{ env.PATH_REACT }}/package-lock.json

                     - run: npm install

                     - run: CI= npm run build

                     - name: artificat react
                       uses: actions/upload-artifact@v1
                       with:
                              name: ${{ env.NAME_ARTIFACT_REACT }}
                              path: ${{ env.PATH_REACT }}

       DEPLOYREACT:
              runs-on: ubutun-latest
              defaults:
                     run:
                            working-directory: ${{ env.PATH_REACT }}
              steps:
                     - uses: actions/checkout@master

                     - uses: actions/setup-node@master
                       with:
                              node-version: ${{ env.NODE_VERSION }}
                              cache: "npm"
                              cache-dependency-path: ${{ env.PATH_REACT }}/package-lock.json

                     - name: download artifact
                       uses: actions/download-artifact@v1
                       with:
                              name: ${{ env.NAME_ARTIFACT_REACT }}
                              path: ./

                     - name: FTP
                       uses: SamKirkland/FTP-Deploy-Action@4.3.2
                       with:
                              server: ftp.cluster023.hosting.ovh.net
                              username: ${{ secrets.FTP_USER }}
                              password: ${{ secrets.FTP_PASSWORD }}
                              server-dir: ./api-story-helper/

       BUILD:
              runs-on: ubuntu-latest
              defaults:
                     run:
                            working-directory: ${{ env.PATH_API }}
              steps:
                     - uses: actions/checkout@master

                     - name: Check node
                       uses: actions/setup-node@master
                       with:
                              node-version: ${{ env.NODE_VERSION }}
                              cache: "npm"
                              cache-dependency-path: ${{ env.PATH_API }}/package-lock.json

                     - run: npm install

                     - name: Build
                       run: node ace build --production
                       working-directory: ${{ env.PATH_API }}

                     - name: get env
                       run: cp .env.production ./build/.env

                     - name: Artifact
                       uses: actions/upload-artifact@v1
                       with:
                              name: ${{ env.NAME_ARTIFICAT }}
                              path: ${{ env.PATH_API }}/build

       DEPLOY:
              runs-on: ubuntu-latest
              needs: BUILD
              steps:
                     - uses: actions/checkout@master

                     - name: Check node
                       uses: actions/setup-node@master
                       with:
                              node-version: ${{ env.NODE_VERSION }}
                              cache: "npm"
                              cache-dependency-path: ${{ env.PATH_API }}/package-lock.json

                     - name: download artifact
                       uses: actions/download-artifact@v1
                       with:
                              name: ${{ env.NAME_ARTIFICAT }}
                              path: ./build

                     - name: Deploy to Staging server
                       uses: easingthemes/ssh-deploy@v2
                       env:
                              SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
                              ARGS: "-rltgoDzvO --delete"
                              SOURCE: build/
                              REMOTE_HOST: ${{ secrets.HOST }}
                              REMOTE_USER: ${{ secrets.USER }}
                              REMOTE_PORT: ${{ secrets.PORT }}
                              TARGET: ${{ env.REMOTE_TARGET }}

       SSH:
              runs-on: ubuntu-latest
              needs: DEPLOY
              steps:
                     - uses: actions/checkout@master

                     - name: checkout
                       uses: actions/setup-node@master
                       with:
                              node-version: ${{ env.NODE_VERSION }}

                     - name: Deploy
                       uses: appleboy/ssh-action@master
                       with:
                              host: ${{ secrets.HOST }}
                              username: ${{ secrets.USER }}
                              port: ${{ secrets.PORT }}
                              key: ${{ secrets.SSH_PRIVATE_KEY }}
                              script_stop: true
                              script: |
                                     pm2 stop api-story-helper
                                     cd /home/debianftp/www/api-story-helper
                                     npm ci --production
                                     pm2 start server.js --name api-story-helper
                                     pm2 save
